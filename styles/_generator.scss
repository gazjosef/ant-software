@use "abstract/colors" as *;
@use "abstract/sizes" as *;

// * ///////////////////////////////////////////////////////////////////////
// * COLOR
// * ///////////////////////////////////////////////////////////////////////

:root {
  @each $color, $shades in $colors {
    @each $shade, $value in $shades {
      --clr-#{$color}-#{$shade}: #{$value};
    }
  }
}

@each $color, $shades in $colors {
  @each $shade, $value in $shades {
    .u-clr-#{$color}-#{$shade} {
      color: #{$value};
    }
  }
}

@each $color, $shades in $colors {
  @each $shade, $value in $shades {
    .u-bg-#{$color}-#{$shade} {
      background-color: #{$value};
    }
  }
}

// * ///////////////////////////////////////////////////////////////////////
// * FONTS
// * ///////////////////////////////////////////////////////////////////////

:root {
  @each $size, $value in $font-size {
    --fs-#{$size}: #{$value}rem;
  }

  @each $weight, $value in $font-weights {
    --fw-#{$weight}: #{$value};
  }
}

@each $size, $value in $font-size {
  .u-fs-#{$size} {
    font-size: #{$value}rem;
  }
}

@each $weight, $value in $font-weights {
  .u-fw-#{$weight} {
    font-weight: #{$value};
  }
}
// * ///////////////////////////////////////////////////////////////////////
// * GRID
// * ///////////////////////////////////////////////////////////////////////

// * -- GRID TEMPLATE COLUMNS
@each $size, $value in $grid-templates {
  .u-grid-cols-#{$size} {
    @if not(type-of($value) == "number") {
      grid-template-columns: #{$value};
    } @else {
      grid-template-columns: repeat(#{$value}, minmax(0, 1fr));
    }
  }
}

// * -- GRID COLUMN SPAN
@each $size, $value in $grid-columns {
  .u-col-span-#{$size} {
    @if not(type-of($value) == "number") {
      grid-column: #{$value};
    } @else {
      grid-column: span #{$value} / span #{$value};
    }
  }
}

// * -- GRID COLUMN START
@each $size, $value in $grid-columns {
  .u-col-start-#{$size} {
    grid-column-start: #{$value};
  }
}

// * -- GRID COLUMN END
@each $size, $value in $grid-columns {
  .u-col-end-#{$size} {
    grid-column-end: #{$value};
  }
}

// * -- GRID ROW SPAN
@each $size, $value in $grid-rows {
  .u-row-span-#{$size} {
    @if not(type-of($value) == "number") {
      grid-row: #{$value};
    } @else {
      grid-row: span #{$value} / span #{$value};
    }
  }
}

// * -- GRID ROW START
@each $size, $value in $grid-rows {
  .u-row-start-#{$size} {
    grid-row-start: #{$value};
  }
}

// * -- GRID ROW END
@each $size, $value in $grid-rows {
  .u-row-end-#{$size} {
    grid-row-end: #{$value};
  }
}

// * -- GRID GAP
@each $size, $value in $grid-gaps {
  .u-gap-#{$size} {
    gap: #{$value}rem;
  }
}

// * -- GRID COLUMN GAP
@each $size, $value in $grid-gaps {
  .u-gap-x-#{$size} {
    column-gap: #{$value}rem;
  }
}

// * -- GRID ROW GAP
@each $size, $value in $grid-gaps {
  .u-gap-y-#{$size} {
    row-gap: #{$value}rem;
  }
}

// * ///////////////////////////////////////////////////////////////////////
// * MARGIN
// * ///////////////////////////////////////////////////////////////////////

@each $size, $value in $box-sizes {
  .u-mt-#{$size} {
    @if not(type-of($value) == "number") {
      margin-top: #{$value};
    } @else {
      margin-top: #{$value}rem;
    }
  }
}

@each $size, $value in $box-sizes {
  .u-mb-#{$size} {
    @if not(type-of($value) == "number") {
      margin-bottom: #{$value};
    } @else {
      margin-bottom: #{$value}rem;
    }
  }
}

@each $size, $value in $box-sizes {
  .u-ml-#{$size} {
    @if not(type-of($value) == "number") {
      margin-left: #{$value};
    } @else {
      margin-left: #{$value}rem;
    }
  }
}

@each $size, $value in $box-sizes {
  .u-mr-#{$size} {
    @if not(type-of($value) == "number") {
      margin-right: #{$value};
    } @else {
      margin-right: #{$value}rem;
    }
  }
}

@each $size, $value in $box-sizes {
  .u-mx-#{$size} {
    @if not(type-of($value) == "number") {
      margin-left: #{$value};
      margin-right: #{$value};
    } @else {
      margin-left: #{$value}rem;
      margin-right: #{$value}rem;
    }
  }
}

@each $size, $value in $box-sizes {
  .u-my-#{$size} {
    @if not(type-of($value) == "number") {
      margin-top: #{$value};
      margin-bottom: #{$value};
    } @else {
      margin-top: #{$value}rem;
      margin-bottom: #{$value}rem;
    }
  }
}

// * ///////////////////////////////////////////////////////////////////////
// * PADDING
// * ///////////////////////////////////////////////////////////////////////

@each $size, $value in $box-sizes {
  .u-pt-#{$size} {
    @if not(type-of($value) == "number") {
      padding-top: #{$value};
    } @else {
      padding-top: #{$value}rem;
    }
  }
}

@each $size, $value in $box-sizes {
  .u-pb-#{$size} {
    @if not(type-of($value) == "number") {
      padding-bottom: #{$value};
    } @else {
      padding-bottom: #{$value}rem;
    }
  }
}

@each $size, $value in $box-sizes {
  .u-pl-#{$size} {
    @if not(type-of($value) == "number") {
      padding-left: #{$value};
    } @else {
      padding-left: #{$value}rem;
    }
  }
}

@each $size, $value in $box-sizes {
  .u-pr-#{$size} {
    @if not(type-of($value) == "number") {
      padding-right: #{$value};
    } @else {
      padding-right: #{$value}rem;
    }
  }
}

@each $size, $value in $box-sizes {
  .u-px-#{$size} {
    @if not(type-of($value) == "number") {
      padding-left: #{$value};
      padding-right: #{$value};
    } @else {
      padding-left: #{$value}rem;
      padding-right: #{$value}rem;
    }
  }
}

@each $size, $value in $box-sizes {
  .u-py-#{$size} {
    @if not(type-of($value) == "number") {
      padding-top: #{$value};
      padding-bottom: #{$value};
    } @else {
      padding-top: #{$value}rem;
      padding-bottom: #{$value}rem;
    }
  }
}
